
@model Braunability_ViewModal.Model.BraunVM_Request.DeductionForm

@{
    Layout = null;
}

<style type="text/css">
    .field-validation-error {
        color: red;
    }
</style>

<link href="~/Content/validator.css" rel="stylesheet" />

<script src="~/scripts/jquery.validator.js"></script>
<script src="~/scripts/jquery.unobtrusive-ajax.min.js"></script>
<script src="~/scripts/jquery.toast.js"></script>


@*@using (Ajax.BeginForm("AddUpdateDeduction", "Admin", new AjaxOptions { HttpMethod = "POST", OnSuccess = "onSuccess" }))
{*@
    <div class="modal fade" id="deduction">
        <div class="modal-dialog">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Add New Deduction</h4>
                    <button type="button" class="close" data-dismiss="modal"><i class="icon-close"></i></button>
                </div>

                <!-- Modal body -->
                <div class="modal-body">
                    @Html.HiddenFor(m => m.ID)
                    @Html.HiddenFor(x => x.Status)
                    @Html.HiddenFor(x => x.Message)
                    <div class="form-group row">
                        <label class="col-sm-5 col-form-label text-sm-right pr-0">Deduction Amount</label>
                        <div class="col-sm-7">
                            @*<input type="text" class="form-control">*@
                            @Html.TextBoxFor(m => m.DeductionAmount, new { @class = "form-control decimal", @title = "Deduction Amount", onpaste = "return false;", validate = "DeductionForm",  require = "*The Deduction Amount is required" })
                            @Html.ValidationMessageFor(m => m.DeductionAmount)
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-sm-5 col-form-label text-sm-right pr-0">Description</label>
                        <div class="col-sm-7">
                            @*<textarea class="form-control" rows="5"></textarea>*@
                            @Html.TextBoxFor(m => m.Description, new { @class = "form-control", @title = "Description", onpaste = "return false;", validate = "DeductionForm", require = "*The Description is required" })
                            @Html.ValidationMessageFor(m => m.Description)
                        </div>
                    </div>


                </div>

                <!-- Modal footer -->
                <div class="modal-footer">
                    <div class="col-sm-12 text-right">
                        <button class="btn btn-cstm btn-white" data-dismiss="modal">Cancel</button>
                        <button class="btn btn-cstm btn-blue btnSave">Save</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
@*}*@

<script>
    function allowNumbersOnly(e) {
        var code = (e.which) ? e.which : e.keyCode;
        if (code > 31 && (code < 48 || code > 57)) {
            e.preventDefault();
        }
    }
    //function onSuccess(data) {
    //    debugger
    //    if (data.indexOf("field-validation-error") > -1) {
    //        //$.ajaxSetup({ cache: false });
    //        //$("#popupConversionDetails").html("");
    //        $("#deduction").modal("hide");
    //        $(".modal-backdrop").removeClass("show");
    //        $("#popupConversionDeduction").html(data);
    //        $("#deduction").modal("show");
    //        return;
    //    }
    //    else {
    //        if (data.status) {
    //            ConversionDetailsGrid();
    //            $("#deduction").modal("hide");
    //            AlertToast("success", data.message)
    //        }
    //        else {

    //            AlertToast("warning", data.message)
    //        }


    //    }
    //}

    $(document).ready(function () {

        //if ($("#ID").val() != 0) {
        //    $("#DepreciationPercentage").val();
        //}
        //else
        //    $("#DepreciationPercentage").val("");

        var status = $("#Status").val();
        var message = $("#Message").val();

        if (status != "" && message != "") {

            if (status == "False") {
                AlertToast("warning", message);
            }

        }
    });

    $('.decimal').keyup(function () {
        var val = $(this).val();
        if (isNaN(val)) {
            val = val.replace(/[^0-9\.]/g, '');
            if (val.split('.').length > 2)
                val = val.replace(/\.+$/, "");
        }
        $(this).val(val);
    });

    $(".btnSave").click(function () {
        debugger
        $(".loader").css({ "display": "block" }); //Loader
        var id = $("#ID").val();
        var amount = $("#DeductionAmount").val();
        var description = $("#Description").val();


        if (validate("DeductionForm") == true) {
            $.ajax({
                type: "POST",
                url: '@Url.Content("~/Admin/AddUpdateDeduction")',
                data: '{ID: "' + id + '" ,DeductionAmount: "' + amount + '" ,Description: "' + description + '" }',
                processData: false,
                contentType: false,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    debugger
                    if (response.status) {
                        ConversionDeductionGrid();
                        $("#deduction").modal("hide");
                        AlertToast('success', response.message);
                        $(".loader").css({ "display": "none" }); //Loader
                    }
                    else {
                        AlertToast('warning', response.message);
                        $(".loader").css({ "display": "none" }); //Loader
                    }


                }

            });
        }
        else {
            $(".loader").css({ "display": "none" }); //Loader
        }


        
    });
</script>